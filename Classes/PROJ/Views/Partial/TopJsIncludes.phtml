<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
<script type="text/javascript" src="/js/jquery.hammer.js"></script>
<script type="text/javascript" src="/js/flowtype.js"></script>
<script type="text/javascript" src="/js/main.js"></script>
<script type="text/javascript" src="/js/Search.js"></script>
<script type="text/javascript" src="/js/markerClustererPlus.js"></script>

<script type="text/javascript">
    var map; /* Main map variable */
    var lastLoadedJson;
    var markerCluster;

    function fakeMarkerClick(locationId, lat, lng) {
        map.setZoom(16);
        map.setCenter(new google.maps.LatLng(lat, lng));
        loadLocation(locationId);
        openSidebar();
    }

    function loadLocation(locationId) {
        for (var i = 0; i < lastLoadedJson.length; i++) {
            if (lastLoadedJson[i].id === locationId) {
                showLocation(lastLoadedJson[i]);
                return;
            }
        }
    }

    function initializeMakerClusterer() {
        markerCluster = new MarkerClusterer(map);
        //markerCluster.setGridSize(15);
        markerCluster.setGridSize(25);
        markerCluster.setIgnoreHidden(true);
    }

    function loadJsonMarkers() {
        initializeMakerClusterer();
        $.getJSON('/ajax/allLocations/', function(data) {
            lastLoadedJson = data;
            $.each(data, function(i, location) {
                var foundApprovedProject = false;
                for (var j = 0; j < location.projects.length; j++)
                {
                    if ((location.projects[j].acceptanceStatus === "approved" && location.projects[j].review.acceptanceStatus === "approved") && location.acceptanceStatus === "approved")
                    {
                        foundApprovedProject = true;
                        break;
                    }
                }
                if (foundApprovedProject)
                {
                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(location.lat, location.lng),
                        map: map,
                        icon: getIconPath(location.type),
                        animation: google.maps.Animation.NONE,
                        title: location.name,
                        id: location.id,
                        type: location.type,
                        country: location.country
                    });

                    markerCluster.addMarker(marker);
                    google.maps.event.addListener(marker, 'click', function() {
                        map.setZoom(16);
                        map.setCenter(marker.getPosition());
                        loadLocation(marker.id);
                        openSidebar();
                    });
                }
            });


        });
    }

    function openSidebar() {
        $("aside").removeClass('closed');
    }

    function closeSidebar() {
        $("aside").addClass('closed');
    }

    function toggleSidebar() {
        if (!$('aside').hasClass('closed')) {
            closeSidebar();
        } else {
            openSidebar();
        }
    }

    function getIconPath(iconName) {
        var iconBase = '/images/';
        switch (iconName)
        {
            case "education":
                return iconBase + "university.png";
            case "business":
                return iconBase + "business.png";
            default:
                console.log("Error: Invalid icon name");
                return "";
        }
    }


    function loadReview(projectId) {
        for (var i = 0; i < lastLoadedJson.length; i++) {
            var projects = lastLoadedJson[i].projects;
            for (var j = 0; j < projects.length; j++) {
                project = projects[j];

                if (project.id === projectId) {
                    showReview(project, lastLoadedJson[i]);
                    return;
                }
            }
        }
    }

    function showLocation(location) {
        var sidebar = $('aside');

        sidebar.text("");
        sidebarHeader = $('<div class="row clearfix"/>');
        sidebarHeader.append("<h2 class=\"column full highlight\">" + location.name + "</h2>");
        sidebarHeader.append("<h3 class=\"column half italic\">" + location.place + "</h3>");
        sidebarHeader.append("<h3 class=\"column half\">" + location.type + "</h3>");
        sidebar.append(sidebarHeader);
        sidebarHeader.append("<p class=\"column half\">Door</p>");
        sidebarHeader.append("<p class=\"column half\">Beoordeling</p>");

        var row;
        for (var i = 0; i < location.projects.length; i++) {
            if ((location.projects[i].acceptanceStatus === "approved" && location.projects[i].review.acceptanceStatus === "approved") && location.acceptanceStatus === "approved") {
                var project = location.projects[i];
                sidebar.append("<div class=\"row clearfix reviewLink\" data-review-id=\"" + project.id + "\"><span class=\"column full\">" + project.student.firstname + " " + project.student.surname + "</span></div>");


                row = $("<p class=\"row clearfix\">");
                row.append("<span class=\"column half italic\">" + project.type + "</span>");

                var stars = $("<span class=\"column half\"/>");
                stars.append("<table class=\"reviewrating\"><tr><td class='first'>Assignment rating:</td><td>");
                stars.append(getStars(project.review.assignmentrating));
                stars.append("</td></tr><tr><td class='first'>Guidance rating:</td><td>");
                stars.append(getStars(project.review.guidancerating));
                stars.append("</td></tr><tr><td class='first'>Accomodation rating:</td><td>");
                stars.append(getStars(project.review.accommodationrating));
                stars.append("</td></tr></table>");

                row.append(stars);

                sidebar.append(row);
            }
        }
    }

    function getStars(score) {

        var stars = $("<span />");
        for (var i = 0; i < 5; i++) { //5 max rating
            if (score > i) {
                stars.append("<span class=\"highlight\">&#10032;</span>");
            } else {
                stars.append("<span>&#10032;</span>");
            }
        }
        return stars;
    }


    function showReview(project, location) {
        var sidebar = $('aside');
        sidebar.text("");
        sidebarHeader = $('<div class="row clearfix"/>');
        sidebarHeader.append("<h2 class=\"column full highlight\">" + location.name + "</h2>");
        sidebarHeader.append("<h3 class=\"column half italic\">" + location.place + "</h3>");
        sidebarHeader.append("<h3 class=\"column half\">" + location.type + "</h3>");
        sidebar.append(sidebarHeader);

        var container;

        container = $("<div class=\"row clearfix\">");
        container.append("<div class=\"column two-thirds\">" + project.review.text + "</div>");

        var sideContent = $("<div class=\"column third\"/>");
        sideContent.append("<p>Door: " + project.student.firstname + " " + project.student.surname + "</p>");
        sideContent.append("<p>Type: " + project.type + "</p>");
        sideContent.append("<p>Beoordeling: " + getStars(project.review.rating).html() + "</p>");
        sideContent.append("<p>Neem contact op met : <a href=\"/contact/show/studentId=" + project.student.id + "/\">" + project.student.firstname + "</a></p>");
        container.append(sideContent);

        sidebar.append(container);
    }

    $(document).ready(function() {

        $('aside').flowtype({
            minimum: 500,
            maximum: 1200,
            fontRatio: 50
        });

        $('aside').hammer().on('dragright', function(e) {
            e.preventDefault();
            openSidebar();
        });
        $('aside').on('dragleft', function(e) {
            if (!$('aside').hasClass('closed')) {
                e.preventDefault();
                closeSidebar();
            }
        });
        $('#swipeline').on('click', function(e) {
            e.stopPropagation();
            e.preventDefault();
            toggleSidebar();
        });

        //subtrackt the header size from the map canvas, removing the scrollbar
        function correctHeaderOffset() {
            var h = $(window).height();
            var w = $(window).width();
            var headerHeight = $('header').height();
            var leftbarWidth = $('#management_left').width();
            //Force fill screen, strange bug with maps
            $('#map').css('height', h);
            $('aside').css('top', headerHeight);
            $('aside').css('height', h - headerHeight);

            //Auto size container of management
            $('#management_right').css('height', h - headerHeight);
            $('#management_right').css('top', headerHeight);
            $('#management_right').css('width', w - leftbarWidth - 10);
            $('#management_container').css('margin-top', $('#management_container').height() / 8 + headerHeight);
            $('#management_container').css('margin-left', $('#management_container').width() / 8);
            if ($("#management_container").children().first().children().first().attr("id") !== "management_container_top")
                $("#management_container").children().first().children().first().css('height', ($("#management_container").height() - 52) / 100 * 94);
            else
                $("#management_container").children().first().children('#scrollable').css('height', ($("#management_container").height() - 104) / 100 * 94);
        }


        function initialize() {
            var avansStyle = (function() {
                var json = null;
                $.ajax({
                    'async': false,
                    'global': false,
                    'url': "/js/mapStyle.json",
                    'dataType': "json",
                    'success': function(data) {
                        json = data;
                    }
                });
                return json;
            })();
<?php
//Ophalen van user location
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'http://freegeoip.net/json/' . $_SERVER['REMOTE_ADDR']);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
$json = strip_tags(trim(curl_exec($ch)));
curl_close($ch);

if (strpos($json, 'Bad Request') === false && strpos($json, 'Not Found') === false) {
    $data = json_decode($json, true);
    if ($data['country_code'] != 'Reserved') {
        $loc = $data['country_name'];
    } else {
        $loc = DEFAULT_MAP_LOCATION;
    }
} else {
    $loc = DEFAULT_MAP_LOCATION;
}
?>
            var geocoder;
            geocoder = new google.maps.Geocoder();
            geocoder.geocode({'address': '<?php echo $loc; ?>'}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    var mapOptions = {
                        center: results[0].geometry.location,
                        zoom: 8,
                        streetViewControl: false,
                        zoomControl: false,
                        panControl: false,
                        mapTypeControl: false,
                        styles: avansStyle
                    };
                    map = new google.maps.Map(document.getElementById("map"),
                            mapOptions);
                    //Force absolute positioning after map tiles are loaded
                    google.maps.event.addListener(map, 'tilesloaded', function() {
                        document.getElementById('map').style.position = 'absolute';
                    });
                    //Correct the height of the map after resizing
                    google.maps.event.addListener(map, 'resize', function() {
                        var mainHeight = $('main').height();
                        var headerHeight = $('header').height();
                        $('#map').css('height', (mainHeight - headerHeight));
                    });

                    //Force a recalculation of the map height
                    correctHeaderOffset();
                    loadJsonMarkers();
                }
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);
        //Register the correctHeaderOffset callback on windows resizing.
        $(window).resize(correctHeaderOffset).resize();

        $(document).on("click", ".reviewLink", function(e) {
            var pid = $(this).data('review-id');
            loadReview(pid);
        });
    });

    function filterCountry() {
        if ($('#country option:selected').val() !== "") {
            markerCluster.getMarkers().forEach(function(marker) {
                if (marker.country.name !== $('#country option:selected').val()) {
                    marker.setVisible(false);
                }
            });
        }
    }

    function filterType() {
        if ($('#locationType option:selected').val() !== "") {
            markerCluster.getMarkers().forEach(function(marker) {
                if (marker.type !== $('#locationType option:selected').val()) {
                    marker.setVisible(false);
                }
            });
        }
    }
    function applyFilters() {
        showAllMarkers();
        filterCountry();
        filterType();
        markerCluster.repaint();
    }

    function showAllMarkers() {
        markerCluster.getMarkers().forEach(function(marker) {
            marker.setVisible(true);
        });
    }

    function resetFilters() {
        showAllMarkers();
        document.getElementById("locationType").value = "";
        document.getElementById("country").value = "";
        // document.getElementById("projectType").value = "";
        markerCluster.repaint();
    }

</script>
