<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
<script type="text/javascript" src="http://eightmedia.github.io/hammer.js/dist/jquery.hammer.js"></script>
<script type="text/javascript" src="/js/flowtype.js"></script>

<script type="text/javascript">
    $(document).ready(function() {
        var map; /* Main map variable */

        function getIconPath(iconName) {
            var iconBase = '/images/';
            switch (iconName)
            {
                case "education":
                    return iconBase + "university.png";
                case "business":
                    return iconBase + "business.png";
                default:
                    console.log("Error: Invalid icon name");
                    return "";
            }
        }

        $('aside').flowtype({
            minimum: 500,
            maximum: 1200,
            fontRatio: 50
        });

        var lastLoadedJson;
        function openSidebar() {
            $("aside").removeClass('closed');
        }

        function closeSidebar() {
            $("aside").addClass('closed');
        }

        function toggleSidebar() {
            if (!$('aside').hasClass('closed')) {
                closeSidebar();
            } else {
                openSidebar();
            }
        }

        $('aside').hammer().on('dragright', function(e) {
            e.preventDefault();
            openSidebar();
        });
        $('aside').on('dragleft', function(e) {
            if (!$('aside').hasClass('closed')) {
                e.preventDefault();
                closeSidebar();
            }
        });
        $('#swipeline').on('click', function(e) {
            e.stopPropagation();
            e.preventDefault();
            toggleSidebar();
        });

        function loadJsonMarkers() {
            console.log("loadJsonMarkers called");
            $.getJSON('/ajax/allLocations/', function(data) {
                console.log("json received");
                $.each(data, function(i, location) {
                    console.log(location.name);
                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(location.lat, location.long),
                        map: map,
                        icon: getIconPath(location.type),
                        animation: google.maps.Animation.NONE,
                        title: location.name,
                        id: location.id
                    });
                    google.maps.event.addListener(marker, 'click', function() {
                        map.setZoom(13);
                        map.setCenter(marker.getPosition());
                        loadLocation(marker.id);
                        openSidebar();
                    });
                });
            });
        }

        function loadLocation(locationId) {
            var sidebar = $('aside');

            $.getJSON('/ajax/locationReview/loc=' + locationId + '/', function(data) {
                lastLoadedJson = data;
                sidebar.text("");
                sidebarHeader = $('<div class="row clearfix"/>');
                sidebarHeader.append("<h2 class=\"column full highlight\">" + data.name + "</h2>");
                sidebarHeader.append("<h3 class=\"column half italic\">" + data.place + "</h3>");
                sidebarHeader.append("<h3 class=\"column half\">" + data.type + "</h3>");
                sidebar.append(sidebarHeader);
                sidebarHeader.append("<p class=\"column half\">Door</p>");
                sidebarHeader.append("<p class=\"column half\">Beoordeling</p>");

                var row;
                for (var i = 0; i < data.reviews.length; i++) {
                    var review = data.reviews[i];
                    sidebar.append("<div class=\"row clearfix reviewLink\" data-review-id=\"" + i + "\"><span class=\"column full\">" + review.author.name + "</span></div>");


                    row = $("<p class=\"row clearfix\">");
                    row.append("<span class=\"column half italic\">" + review.type + "</span>");

                    var stars = $("<span class=\"column half\"/>");
                    stars.append(getStars(review.rating));

                    row.append(stars);

                    sidebar.append(row);
                }
            });
        }



        function loadReview(reviewIndex) {
            var data = lastLoadedJson;

            var sidebar = $('aside');
            sidebar.text("");
            sidebarHeader = $('<div class="row clearfix"/>');
            sidebarHeader.append("<h2 class=\"column full highlight\">" + data.name + "</h2>");
            sidebarHeader.append("<h3 class=\"column half italic\">" + data.place + "</h3>");
            sidebarHeader.append("<h3 class=\"column half\">" + data.type + "</h3>");
            sidebar.append(sidebarHeader);

            var container;
            var review = data.reviews[reviewIndex];
            var author = review.author;

            container = $("<div class=\"row clearfix\">");
            container.append("<div class=\"column two-thirds\">" + review.text + "</div>");

            var sideContent = $("<div class=\"column third\"/>");
            sideContent.append("<p>Door: " + author.name + "</p>");
            sideContent.append("<p>Type: " + review.type + "</p>");
            sideContent.append("<p>Beoordeling: " + getStars(review.rating).html() + "</p>");
            container.append(sideContent);

            sidebar.append(container);
        }

        function getStars(score) {

            var stars = $("<span />");
            for (var i = 0; i < 5; i++) { //5 max rating
                if (score > i) {
                    stars.append("<span class=\"highlight\">&#10032;</span>");
                } else {
                    stars.append("<span>&#10032;</span>");
                }
            }
            return stars;
        }

        //subtrackt the header size from the map canvas, removing the scrollbar
        function correctHeaderOffset() {
            var h = $(window).height();
            var headerHeight = $('header').height();
            //Force fill screen, strange bug with maps
            $('#map').css('height', h);
            $('aside').css('top', headerHeight);
            $('aside').css('height', h - headerHeight);
        }


        function initialize() {
            var avansStyle = (function() {
                var json = null;
                $.ajax({
                    'async': false,
                    'global': false,
                    'url': "/js/mapStyle.json",
                    'dataType': "json",
                    'success': function(data) {
                        json = data;
                    }
                });
                return json;
            })();
            var mapOptions = {
                center: new google.maps.LatLng(-34.397, 150.644),
                zoom: 8,
                streetViewControl: false,
                zoomControl: false,
                panControl: false,
                mapTypeControl: false,
                styles: avansStyle
            };
            map = new google.maps.Map(document.getElementById("map"),
                    mapOptions);
            //Force absolute positioning after map tiles are loaded
            google.maps.event.addListener(map, 'tilesloaded', function() {
                document.getElementById('map').style.position = 'absolute';
            });
            //Correct the height of the map after resizing
            google.maps.event.addListener(map, 'resize', function() {
                var mainHeight = $('main').height();
                var headerHeight = $('header').height();
                $('#map').css('height', (mainHeight - headerHeight));
            });
            //Force a recalculation of the map height
            correctHeaderOffset();
            loadJsonMarkers();
        }

        google.maps.event.addDomListener(window, 'load', initialize);
        //Register the correctHeaderOffset callback on windows resizing.
        $(window).resize(correctHeaderOffset).resize();

        $(document).on("click", ".reviewLink", function(e) {
            var rid = $(this).data('review-id');
            loadReview(rid);
        });
    });



</script>
